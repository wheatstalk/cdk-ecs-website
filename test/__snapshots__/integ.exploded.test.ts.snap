// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`website-service 1`] = `
Object {
  "Outputs": Object {
    "LoadBalancer": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "http://\${LoadBalancerDnsName}/",
          Object {
            "LoadBalancerDnsName": Object {
              "Fn::GetAtt": Array [
                "Alb16C2F182",
                "DNSName",
              ],
            },
          },
        ],
      },
    },
  },
  "Resources": Object {
    "Alb16C2F182": Object {
      "DependsOn": Array [
        "VpcpublicSubnet1DefaultRouteB88F9E93",
        "VpcpublicSubnet2DefaultRoute732F0BEB",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AlbSecurityGroup580F65A6",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
          },
          Object {
            "Ref": "VpcpublicSubnet2SubnetE34B022A",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbSecurityGroup580F65A6": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB explodedintegAlb0D49FD5E",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbSecurityGrouptoexplodedintegServiceSecurityGroup1B1B9B4C808A3CD054": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceSecurityGroupC96ED6A7",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbSecurityGroup580F65A6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "AlbhttpF4DDFFB4": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "ContentType": "text/plain",
              "MessageBody": "Nothing here",
              "StatusCode": "404",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "Alb16C2F182",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ListenerRulesBuilderTargetGroup48615CC1": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 15,
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "15",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ListenerRulesBuilderlistenerrule5000460D26E6": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "ListenerRulesBuilderTargetGroup48615CC1",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "host-header",
            "HostHeaderConfig": Object {
              "Values": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "Alb16C2F182",
                    "DNSName",
                  ],
                },
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "AlbhttpF4DDFFB4",
        },
        "Priority": 5000,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "ListenerRulesBuilderlistenerrule5010B520BCD5": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "RedirectConfig": Object {
              "Host": Object {
                "Fn::GetAtt": Array [
                  "Alb16C2F182",
                  "DNSName",
                ],
              },
              "Path": "/#{path}",
              "Port": "#{port}",
              "Protocol": "#{protocol}",
              "Query": "#{query}",
              "StatusCode": "HTTP_302",
            },
            "Type": "redirect",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "host-header",
            "Values": Array [
              "redirect.host",
            ],
          },
        ],
        "ListenerArn": Object {
          "Ref": "AlbhttpF4DDFFB4",
        },
        "Priority": 5010,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "ServiceD69D759B": Object {
      "DependsOn": Array [
        "ListenerRulesBuilderlistenerrule5000460D26E6",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "proxy",
            "ContainerPort": 80,
            "TargetGroupArn": Object {
              "Ref": "ListenerRulesBuilderTargetGroup48615CC1",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VpcprivateSubnet1SubnetCEAD3716",
              },
              Object {
                "Ref": "VpcprivateSubnet2Subnet2DE7549C",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDefinitionB36D86D9",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "Properties": Object {
        "GroupDescription": "exploded-integ/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ServiceSecurityGroupfromexplodedintegAlbSecurityGroup5690FF798013126E86": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "ServiceSecurityGroupC96ED6A7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbSecurityGroup580F65A6",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "TaskDefinitionB36D86D9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "PORT",
                "Value": "3000",
              },
            ],
            "Essential": true,
            "Image": "nathanpeck/name",
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
          Object {
            "Environment": Array [
              Object {
                "Name": "CONFIG",
                "Value": "server {
  listen 80;
  server_name proxy;

  location / {
      proxy_pass http://127.0.0.1:3000;
      error_page 403 404 405 = @example;
      error_page 500 502 503 504 = @example;
  }

  location /example {
      proxy_pass https://example.org:443;
  }

  location /2example {
      proxy_pass https://example.org:443;
  }

  location @example {
      proxy_pass https://example.org:443;
  }
}",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:9c29855d94d3e2044ef9cd94bc34e00414d128e109358a503b18c1978da5f441",
                ],
              ],
            },
            "Memory": 128,
            "MemoryReservation": 32,
            "Name": "proxy",
            "PortMappings": Array [
              Object {
                "ContainerPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionExecutionRole8D61C2FB",
            "Arn",
          ],
        },
        "Family": "explodedintegTaskDefinition703EEA47",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionTaskRoleFD40A61D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionExecutionRole8D61C2FB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TaskDefinitionExecutionRoleDefaultPolicy1F3406F5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TaskDefinitionExecutionRoleDefaultPolicy1F3406F5",
        "Roles": Array [
          Object {
            "Ref": "TaskDefinitionExecutionRole8D61C2FB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TaskDefinitionTaskRoleFD40A61D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcprivateSubnet1DefaultRouteB506891A": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcpublicSubnet1NATGatewayA036E8A6",
        },
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet1RouteTable1979EACB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcprivateSubnet1RouteTable1979EACB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivateSubnet1RouteTableAssociationEEBD93CE": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet1RouteTable1979EACB",
        },
        "SubnetId": Object {
          "Ref": "VpcprivateSubnet1SubnetCEAD3716",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivateSubnet1SubnetCEAD3716": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcprivateSubnet2DefaultRouteBAC3C1C3": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcpublicSubnet2NATGateway4A29FD4F",
        },
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcprivateSubnet2RouteTable4D0FFC8C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivateSubnet2RouteTableAssociationB691E645": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C",
        },
        "SubnetId": Object {
          "Ref": "VpcprivateSubnet2Subnet2DE7549C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivateSubnet2Subnet2DE7549C": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet1EIP411541E6": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet1NATGatewayA036E8A6": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcpublicSubnet1EIP411541E6",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet1RouteTable15C15F8E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet1Subnet2BB74ED7": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet2EIP811E07A7": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet2NATGateway4A29FD4F": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcpublicSubnet2EIP811E07A7",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
        "SubnetId": Object {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet2SubnetE34B022A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "exploded-integ/Vpc/publicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;
